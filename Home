import SwiftUI
import Foundation

struct CreatorsScrollView: View {
    let creators: [Creator]
    let columns = [GridItem(.flexible()), GridItem(.flexible())]
    @Binding var selectedTab: Int
    
    var body: some View {
            ScrollView(.horizontal, showsIndicators: false) {
                HStack(spacing: 16){
                    ForEach(creators) { creator in
                        NavigationLink(destination: CreatorDetailView(creator: creator, selectedTab: $selectedTab)) {
                            CreatorCardView(creator: creator)
                                .frame(maxWidth: 250)
                        }
                    }
                }
                .padding(5)
            }
    }
}

// MARK: - Creator Card View
struct CreatorCardView: View {
    let creator: Creator
    
    var body: some View {
        VStack(alignment: .leading) {
            Image(creator.imageName)
                .resizable()
                .frame(height: 120)
                .scaledToFit()
                .clipped()
                .cornerRadius(12)
            
            Text(creator.name)
                .foregroundStyle(.green)
                .font(.headline)
                .padding(.top, 4)
            
            Text(creator.description)
                .font(.subheadline)
                .foregroundColor(.gray)
        }
        .padding()
        .background(Color(.systemGray6))
        .cornerRadius(16)
        .shadow(radius: 4)
    }
}

// MARK: - Detail View
struct CreatorDetailView: View {
    let creator: Creator
    @EnvironmentObject var chatManager: ChatManager
    @Binding var selectedTab: Int
    
    var body: some View {
        VStack {
            Image(creator.imageName)
                .resizable()
                .scaledToFit()
                .frame(height: 200)
                .cornerRadius(12)
                .padding()
                
            Text(creator.name)
                .font(.largeTitle)
                .foregroundStyle(.green)
                .bold()
                .padding(.bottom, 4)
                
            Text(creator.description)
                .font(.title3)
                .foregroundStyle(.gray)
                
            Divider()
                
            Text(creator.fullDescription)
                .font(.caption)
                .foregroundStyle(.gray)
                
            Spacer()
                
            Button {
                selectedTab = 1
            } label: {
                Label("Message", systemImage: "message.fill")
                    .font(.headline)
                    .padding()
                    .frame(maxWidth: .infinity)
                    .background(Color.green.opacity(0.8))
                    .foregroundColor(.white)
                    .cornerRadius(12)
                    .padding(.horizontal)
            }
        }
        .padding()
        .navigationTitle(creator.name)
    }
}

struct Home: View {
    @Binding var selectedTab: Int
    var body: some View {
        NavigationStack {
            ScrollView()
            {
                VStack()
                {
                    VStack()
                    {
                        Text("CraftedBy")
                            .font(.system(.largeTitle, design: .rounded) .bold())
                            .foregroundStyle(.white)
                            .offset(y:10)
                        Divider()
                        Text("A hub that opens a window between two worlds")
                            .font(.title2)
                            .foregroundStyle(.white)
                            .tint(.green)
                            .multilineTextAlignment(.center)
                            .padding(5)
                            .bold()
                    }
                    .frame(maxWidth: .infinity)
                    .background(.green)
                    
                    
                    Spacer()
                    
                    VStack(alignment: .leading) {
                        Text("Meet Some of Our Creators!")
                            .bold()
                            .font(.title2)
                            .foregroundColor(.green)
                            .padding(.horizontal)
                        
                        CreatorsScrollView(creators: sampleCreators, selectedTab: $selectedTab)
                    }
                    Divider()
                    
                    VStack(alignment: .leading)
                    {
                        Text("Our Mission")
                            .frame(alignment: .leading)
                            .bold()
                            .font(.title2)
                            .foregroundColor(.green)
                            .padding()
                        
                        HStack()
                        {
                            Image("Our mission")
                                .resizable()
                                .frame(width: 256, height: 160)
                            Text("CraftedBy is a creative freelancing platform designed to empower individuals with special needs by helping them share their talents with the world. Whether theyâ€™re artists, video editors, musicians, or writers, creators can showcase their portfolios and connect with people looking to hire unique, passionate talent. With a clean, accessible interface and a supportive mission, CraftedBy makes freelancing inclusive, proving that creativity knows no limits.")
                                .font(.subheadline)
                                .foregroundColor(.gray)
                                .multilineTextAlignment(.center)
                        }
                        .padding()
                    }
                    
                    Text("Thank you for your support")
                        .font(.system(.largeTitle, design: .rounded) .bold())
                        .foregroundStyle(.white)
                        .frame(maxWidth: .infinity)
                        .background(.green)
                    
                    Spacer()
                }
            }
            .frame(maxHeight: .infinity)
        }
    }
}
